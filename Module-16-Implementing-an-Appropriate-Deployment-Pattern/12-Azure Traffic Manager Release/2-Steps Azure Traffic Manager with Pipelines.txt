Automate the Azure Traffic Manager with Azure Pipelines

1. Start Production Web App
2. Open Traffic Manager Profile\Endpoint-Version 2
3. Delete endpoint
4. Create new Git Repo - trafficmanager
5. Push Code to this Repo
6. Create a build pipeline
7. Delete the test task from pipeline code
8. Add task - Publish build artifacts
9. Save and run
10. Create release pipeline with empty job - Traffic Manager
11. Add stage - Pre-Production
12. Add artifact
13. Add task to the stage - Pre-Production
14. Add Task - Azure App Service Deploy - staging web app
15. Add Task - Azure CLI - Powershell, Inline Script
    - $webid=az resource list --name 'stagingweb1000' --query [].id --output tsv
      $id = '"{0}"' -f $webid
      az network traffic-manager endpoint create -g newgrp1 --profile-name app-profile1000 -n endpoint-version2 --type azureEndpoints --target-resource-id $id --endpoint-status enabled --priority 2
16. Save and Create Release
17. Add another stage in serial with empty job - Production
18. Add Task - Azure App Service Manage - SStop Web Service, productionwebapp1000
19. Save
20. Add Continuous Deployment trigger
21. Add Prost Deployment Approval at Pre-Production stage
22. Change the code in index page - v3"
23. Wait for pipelines to complete.
24. Open Traffic Manager Profile and notice that second end point is in place
25. Once Pipeline executed check traffic manager URL and notice nothing changed
26. Open the URL of Staging Web App and notice the changes are in place.
27. If senior manager has give approval then open pipeline and approve
28. After some time traffic manager url will also show latest changes